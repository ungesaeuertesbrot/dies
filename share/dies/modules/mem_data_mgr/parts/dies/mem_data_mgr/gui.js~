const Lang = imports.lang;
const Gtk = imports.gi.Gtk;
const GObj = imports.gi.GObject;
const Pango = imports.gi.Pango;

function Gui () {
	Gtk.init (null, null);
	__build_window (this);
}


const G_TYPE_UINT64 = 11 << 2;
const G_TYPE_STRING = 16 << 2;

function __build_window (gui) {
	// Left pane
	gui.entry_list_store = new Gtk.ListStore ();
	gui.entry_list_store.set_column_types ([G_TYPE_UINT64, G_TYPE_STRING]);
	
	gui.empty_list_store = new Gtk.ListStore ();
	gui.empty_list_store.set_column_types ([G_TYPE_UINT64, G_TYPE_STRING]);
	var iter = gui.empty_list_store.append ();
	gui.empty_list_store.set_value (iter, 1, "<span weight=\"bold\" size=\"larger\" color=\"gray\">No entries available</span>");
	
	gui.entry_list = new Gtk.TreeView ({headers_visible: false,
										model: gui.empty_list_store,
										sensitive: false});
	gui.list_entry_renderer = new Gtk.CellRendererText ();
	var column = new Gtk.TreeViewColumn ({title: "Entries", sort_column_id: 0});
	column.pack_start (gui.list_entry_renderer, true);
	column.add_attribute (gui.list_entry_renderer, "markup", 1);
	gui.entry_list.append_column (column);
	gui.entry_list_scroll = new Gtk.ScrolledWindow ({child: gui.entry_list});
	
	gui.calendar = new Gtk.Calendar ({show_week_numbers: true});
	
	gui.add_button = new Gtk.Button ({image: new Gtk.Image ({stock: "gtk-add"}),
									relief: Gtk.ReliefStyle.NONE,
									border_width: 0,
									expand: false,
									margin: 0,
									halign: Gtk.Align.START});
	gui.remove_button = new Gtk.Button ({image: new Gtk.Image ({stock: "gtk-remove"}),
										relief: Gtk.ReliefStyle.NONE,
										border_width: 0,
										expand: false,
										margin: 0,
										halign: Gtk.Align.START});
	gui.action_buttons = new Gtk.ButtonBox ({orientation: Gtk.Orientation.VERTICAL,
											layout_style: Gtk.ButtonBoxStyle.START,
											spacing: 5,
											border_width: 5,
											halign: Gtk.Align.START});
	gui.action_buttons.pack_end (gui.add_button, false, false, 0);
	gui.action_buttons.pack_end (gui.remove_button, false, false, 0);
	
	gui.overview_box = new Gtk.Table ({n_columns: 2, n_rows: 2, hexpand: false});
	gui.overview_box.attach (gui.entry_list_scroll, 0, 2, 0, 1, Gtk.AttachOptions.EXPAND | Gtk.AttachOptions.FILL,
							Gtk.AttachOptions.EXPAND | Gtk.AttachOptions.FILL, 0, 0);
	gui.overview_box.attach (gui.calendar, 0, 1, 1, 2, 0,
							Gtk.AttachOptions.FILL, 0, 0);
	gui.overview_box.attach (gui.action_buttons, 1, 2, 1, 2, Gtk.AttachOptions.EXPAND | Gtk.AttachOptions.FILL,
							Gtk.AttachOptions.FILL, 0, 0);
	
	// Right pane
	gui.date_adjustment = new Gtk.Calendar ({});
	gui.date_expander = new Gtk.Expander ({label: ""});
	gui.date_expander.child = gui.date_adjustment;
	
	gui.title_entry = new Gtk.Entry ({placeholder_text: "Short description of the day's events", has_frame: false, shadow_type: Gtk.ShadowType.NONE});
	gui.place_entry = new Gtk.Entry ({placeholder_text: "Place", has_frame: false, shadow_type: Gtk.ShadowType.NONE});
	gui.text_body = new Gtk.TextView ({pixels_below_lines: 5, wrap_mode: Gtk.WrapMode.WORD_CHAR});
	gui.text_body_scroll = new Gtk.ScrolledWindow ({child: gui.text_body});
	
	gui.details_box = new Gtk.Box ({orientation: Gtk.Orientation.VERTICAL, hexpand: true});
	gui.details_box.pack_start (gui.date_expander, false, false, 0);
	gui.details_box.pack_start (gui.title_entry, false, false, 0);
	gui.details_box.pack_start (gui.place_entry, false, false, 0);
	gui.details_box.pack_start (gui.text_body_scroll, true, true, 0);
	
	// Window
	gui.base_box = new Gtk.Paned ({orientation: Gtk.Orientation.HORIZONTAL});
	gui.base_box.pack1 (gui.overview_box, true, false);
	gui.base_box.pack2 (gui.details_box, true, false);
	gui.base_box.show_all ();
	
	gui.window = new Gtk.Window ({type: Gtk.WindowType.TOPLEVEL, title: "Dies"});
	gui.window.connect ("delete-event", function (a, e) gui.quit ());
	gui.window.child = gui.base_box;
	
	// Further setup
	__set_entry_list_empty (gui);
}


function __set_entry_list_empty (gui)
{
	gui.add_button.sensitive = false;
	gui.entry_list.sensitive = false;
	gui.entry_list.model = gui.empty_list_store;
	gui.list_entry_renderer.alignment = Pango.Alignment.CENTER;
	gui.list_entry_renderer.xalign = 0.5;
}


function __set_entry_list_not_empty (gui)
{
	gui.entry_list.sensitive = true;
	gui.entry_list.model = gui.entry_list_store;
	gui.list_entry_renderer.alignment = Pango.Alignment.LEFT;
	gui.list_entry_renderer.xalign = 0;
}


Gui.prototype = {
	window: null,
	toolkit: "Gtk+-3.0",
	
	present: function () {
		this.window.present ();
	},
	
	hide: function () {
		this.window.hide ();
	},
	
	run: function () {
		Gtk.main ();
	},
	
	quit: function () {
		Gtk.main_quit ();
	}
}
